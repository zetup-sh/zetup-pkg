# console.log with variable

snippet lf "console.log"
console.log("${1:${VISUAL}} = ", $1)
endsnippet
snippet lm "console.log"
console.log("toJS(${1:${VISUAL}}) = ", toJS($1))
endsnippet

snippet ln "console.log"
console.log("$1")
endsnippet


snippet iifea "asynchronous iife"
;(async () => {
	$1
})()
endsnippet

snippet store "get store from props"
const { store } = this.props
endsnippet

snippet classes "get classes from props"
const { classes } = this.props
endsnippet

snippet cmpt "mobx react component"
import React from 'react'
import { inject, observer } from 'mobx-react'

@inject('store')
@observer
export class $1 extends React.Component {
	render() {
		return <div></div>
	}
}
endsnippet

snippet express-server "express server"
require('source-map-support').install()
const express = require('express')
const bodyParser = require('body-parser')

const app = express()

process.on('unhandledRejection', (reason, p) => \{
  console.error('Unhandled Rejection at:', p, 'reason:', reason)
  process.exit(1)
\})

const html = \`
<!doctype html>
<html>
  <head>
    <title></title>
    <link href="/main.css" rel="stylesheet" />
  </head>
  <body>
    <app></app>
    <script src="/client.js"></script>
  </body>
</html>

  \`.trim()

app.use(bodyParser.json())
app.use(bodyParser.text())

app.use(express.static("./build"))
app.use((req, res) => res.status(200).end(html))

app.listen(3000, ()=> console.log("listening on 3000"))
endsnippet
